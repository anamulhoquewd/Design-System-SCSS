/*=============================================
=            Grid Layout system            =
=============================================*/

// Mixin for Grid Container
@mixin grid-container($columns: 12) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
}

// Grid Classes
.grid {
  @include grid-container();
}

.grid-col-2 {
  @include grid-container(2);
}

.grid-col-3 {
  @include grid-container(3);
}

.grid-col-4 {
  @include grid-container(4);
}

.grid-col-5 {
  @include grid-container(5);
}

.grid-col-6 {
  @include grid-container(6);
}

.grid-col-7 {
  @include grid-container(7);
}

.grid-col-8 {
  @include grid-container(8);
}

.grid-col-9 {
  @include grid-container(9);
}

.grid-col-10 {
  @include grid-container(10);
}

.grid-col-11 {
  @include grid-container(11);
}

.grid-col-12 {
  @include grid-container(12);
}

// Grid Item Spanning
@mixin grid-span($span) {
  grid-column: span $span;
}

.item {
  &-span-2 {
    @include grid-span(2);
  }
  &-span-3 {
    @include grid-span(3);
  }
  &-span-4 {
    @include grid-span(4);
  }
  &-span-5 {
    @include grid-span(5);
  }
  &-span-6 {
    @include grid-span(6);
  }
  &-span-7 {
    @include grid-span(7);
  }
  &-span-8 {
    @include grid-span(8);
  }
  &-span-9 {
    @include grid-span(9);
  }
  &-span-10 {
    @include grid-span(10);
  }
  &-span-11 {
    @include grid-span(11);
  }
  &-span-12 {
    @include grid-span(12);
  }
}

/*=====  End of Grid Layout system  ======*/

/*=============================================
=            Flex Layout system            =
=============================================*/

// Mixin for Flex Container
@mixin flex-container(
  $direction: row,
  $align: start,
  $justify: flex-start,
  $gap: $spacing-16
) {
  
}

// Flex Classes
.flex {
  display: flex;
  flex-direction: row;
  align-items: start;
  justify-content: start;
}


.justify-center {
  justify-content: center;
}

.justify-normal {
  justify-content: normal;
}

.justify-end {
  justify-content: flex-end;
}

.justify-start {
  justify-content: flex-start;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-start {
  justify-items: flex-start;
}

.justify-items-end {
  justify-items: flex-end;
}

.justify-items-stretch {
  justify-items: stretch;
}

.justify-items-baseline {
  justify-items: baseline;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-start {
  justify-self: flex-start;
}

.justify-self-end {
  justify-self: flex-end;
}

.justify-self-stretch {
  justify-self: stretch;
}

.justify-self-baseline {
  justify-self: baseline;
}

.justify-self-auto {
  justify-self: auto;
}

.justify-self-normal {
  justify-self: normal;
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-stretch {
  align-items: stretch;
}

.align-baseline {
  align-items: baseline;
}


.align-items-center {
  align-items: center;
}

.align-items-start {
  align-items: flex-start;
}

.align-items-end {
  align-items: flex-end;
}

.align-items-stretch {
  align-items: stretch;
}

.align-items-baseline {
  align-items: baseline;
}

.align-self-center {
  align-self: center;
}

.align-self-start {
  align-self: flex-start;
}

.align-self-end {
  align-self: flex-end;
}

.align-self-stretch {
  align-self: stretch;
}

.align-self-baseline {
  align-self: baseline;
}

.align-self-auto {
  align-self: auto;
}

.align-self-normal {
  align-self: normal;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

// Flex Item
.item {
  &-grow {
    flex-grow: 1;
  }

  &-shrink {
    flex-shrink: 1;
  }

  &-basis-50 {
    flex-basis: 50%;
  }
}

/*=====  End of Flex Layout system  ======*/
